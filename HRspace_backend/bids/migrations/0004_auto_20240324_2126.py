# Generated by Django 4.2.9 on 2024-03-24 18:26
import csv
from django.db import migrations


def add_city(apps, schema_editor):
    City = apps.get_model("bids", "City")

    path = f'./data/city.csv'
    with open(path, newline='', encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file,
                            delimiter='_',
                            skipinitialspace=True
                            )
        for row in reader:
            City.objects.update_or_create(name = row[0])


def add_country(apps, schema_editor):
    Country = apps.get_model("bids", "Country")

    path = f'./data/country.csv'
    with open(path, newline='', encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file,
                            delimiter='_',
                            skipinitialspace=True
                            )
        for row in reader:
            Country.objects.update_or_create(name = row[0])


def add_job_vacancy(apps, schema_editor):
    JobVacancy = apps.get_model("bids", "JobVacancy")

    path = f'./data/job_vacancy.csv'
    with open(path, newline='', encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file,
                            delimiter='_',
                            skipinitialspace=True
                            )
        for row in reader:
            JobVacancy.objects.update_or_create(name = row[0])


def add_sphere(apps, schema_editor):
    Sphere = apps.get_model("bids", "Sphere")

    path = f'./data/sphere.csv'
    with open(path, newline='', encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file,
                            delimiter='_',
                            skipinitialspace=True
                            )
        for row in reader:
            Sphere.objects.update_or_create(name=row[0])

def add_data(apps, schema_editor):
    ScheduleOption = apps.get_model("bids", "ScheduleOption")
    data = [
        {'name': 'Сменный'},
        {'name': 'Вахтовый'},
        {'name': '5/2 пн - пт'},
        {'name': 'Свободный'},
        {'name': 'Другой'}]
    for row in data:
        ScheduleOption.objects.update_or_create(**row)

    WorkFormat = apps.get_model("bids", "WorkFormat")
    data = [
        {'name': 'В офисе'},
        {'name': 'Удаленно'},
        {'name': 'Гибрид'}]
    for row in data:
        WorkFormat.objects.update_or_create(**row)

    RegisterAsOption = apps.get_model("bids", "RegisterAsOption")
    data = [
        {'name': 'ТК РФ'},
        {'name': 'Самозанятые'},
        {'name': 'ИП'},
        {'name': 'ГПХ'}]
    for row in data:
        RegisterAsOption.objects.update_or_create(**row)

    EmployeeCategory = apps.get_model("bids", "EmployeeCategory")
    data = [
        {'name': 'Студентов'},
        {'name': 'От 14 лет'},
        {'name': 'От 16 лет'},
        {'name': 'Пенсионеров'},
        {'name': 'С нарушением здоровья'},
        {'name': 'Иностранных граждан'}]
    for row in data:
        EmployeeCategory.objects.update_or_create(**row)

    ExperienceOption = apps.get_model("bids", "ExperienceOption")
    data = [
        {'name': 'Без опыта'},
        {'name': 'От 1 года до 3 лет'},
        {'name': 'От 3 до 6 лет'},
        {'name': 'Более 6 лет'}]
    for row in data:
        ExperienceOption.objects.update_or_create(**row)

    EducationsOption = apps.get_model("bids", "EducationsOption")
    data = [
        {'name': 'Среднее'},
        {'name': 'Среднее специальное'},
        {'name': 'Неоконченное высшее'},
        {'name': 'Высшее'},
        {'name': 'Бакалавр'},
        {'name': 'Магистр'},
        {'name': 'Кандидат наук'},
        {'name': 'Доктор наук'}]
    for row in data:
        EducationsOption.objects.update_or_create(**row)


class Migration(migrations.Migration):

    dependencies = [
        ('bids', '0003_tariffoption_description'),
    ]

    operations = [
        migrations.RunPython(add_city),
        migrations.RunPython(add_country),
        migrations.RunPython(add_job_vacancy),
        migrations.RunPython(add_sphere),
        migrations.RunPython(add_data),
    ]
